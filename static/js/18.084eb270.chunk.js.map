{"version":3,"sources":["views/app-views/pages/setting/index.js"],"names":["EditProfile","id","useParams","history","useHistory","_useState","useState","_useState2","_slicedToArray","avatar","setAvatar","dispatch","useDispatch","_useSelector","useSelector","store","user","currentUser","isLoading","useEffect","fetchUser","_jsx","Loading","_jsxs","_Fragment","children","Flex","alignItems","mobileFlex","className","Avatar","size","src","icon","UserOutlined","Upload","onChange","info","file","status","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","originFileObj","imageUrl","message","success","content","key","duration","setTimeout","destroy","showUploadList","action","Button","type","onClick","Form","name","layout","initialValues","email","username","phoneNumber","phone","website","city","address","postcode","zipcode","onFinish","values","push","concat","APP_PREFIX_PATH","onFinishFailed","errorInfo","console","log","Row","Col","xs","sm","md","lg","gutter","ROW_GUTTER","Item","label","rules","required","Input","htmlType"],"mappings":"gRAgLeA,UAlKK,WAClB,IAAQC,EAAOC,sBAAPD,GACFE,EAAUC,uBAChBC,EAA4BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAElBI,EAAWC,cACjBC,EAAmCC,aAAY,SAACC,GAAK,OAAKA,EAAMC,IAAI,IAA5DC,EAAWJ,EAAXI,YAAaC,EAASL,EAATK,UACrBC,qBAAU,WACRR,EAASS,YAAUnB,GACrB,GAAG,CAACA,IAoCJ,OAAIiB,EAAkBG,cAACC,IAAO,IAE5BC,eAAAC,WAAA,CAAAC,SAAA,CACEF,eAACG,IAAI,CACHC,WAAW,SACXC,YAAY,EACZC,UAAU,2BAA0BJ,SAAA,CAEpCJ,cAACS,IAAM,CAACC,KAAM,GAAIC,IAAKvB,EAAQwB,KAAMZ,cAACa,IAAY,MAClDX,eAAA,OAAKM,UAAU,uBAAsBJ,SAAA,CACnCJ,cAACc,IAAM,CACLC,SA1Ba,SAACC,GAEG,SAArBA,EAAKC,KAAKC,UArBE,SAACC,EAAKC,GACtB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,QAAQ,kBAAMH,EAASC,EAAOG,OAAO,IAC7DH,EAAOI,cAAcN,EACvB,CAkBIO,CAAUV,EAAKC,KAAKU,eAAe,SAACC,GAAQ,OAAKvC,EAAUuC,EAAS,IACpEC,IAAQC,QAAQ,CAAEC,QAAS,YAAaC,IAH9B,YAGmCC,SAAU,IACvDC,YAAW,WACTL,IAAQM,SACV,GAAG,KAEP,EAkBUC,gBAAgB,EAChBC,OAda,mDAcUjC,SAEvBJ,cAACsC,IAAM,CAACC,KAAK,UAASnC,SAAC,oBAEzBJ,cAACsC,IAAM,CAAC9B,UAAU,OAAOgC,QArBV,WACrBnD,EAAU,GACZ,EAmByDe,SAAC,iBAKtDJ,cAAA,OAAKQ,UAAU,OAAMJ,SACnBJ,cAACyC,IAAI,CACHC,KAAK,mBACLC,OAAO,WACPC,cAAe,CACbxD,OAAQA,EACRsD,KAAiB,OAAX9C,QAAW,IAAXA,OAAW,EAAXA,EAAa8C,KACnBG,MAAkB,OAAXjD,QAAW,IAAXA,OAAW,EAAXA,EAAaiD,MACpBC,SAAqB,OAAXlD,QAAW,IAAXA,OAAW,EAAXA,EAAakD,SACvBC,YAAwB,OAAXnD,QAAW,IAAXA,OAAW,EAAXA,EAAaoD,MAC1BC,QAAoB,OAAXrD,QAAW,IAAXA,OAAW,EAAXA,EAAaqD,QACtBC,KAAiB,OAAXtD,QAAW,IAAXA,OAAW,EAAXA,EAAauD,QAAQD,KAC3BE,SAAqB,OAAXxD,QAAW,IAAXA,OAAW,EAAXA,EAAauD,QAAQE,SAEjCC,SAhES,SAACC,GAEhB1B,IAAQC,QAAQ,CAAEC,QAAS,QAASC,IADxB,cAEZE,YAAW,WACTL,IAAQM,UACRrD,EAAQ0E,KAAK,GAADC,OAAIC,IAAe,gBACjC,GAAG,IACL,EA0DQC,eAxDe,SAACC,GACtBC,QAAQC,IAAI,UAAWF,EACzB,EAsDuCxD,SAE/BJ,cAAC+D,IAAG,CAAA3D,SACFF,eAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAGhE,SAAA,CAClCF,eAAC6D,IAAG,CAACM,OAAQC,IAAWlE,SAAA,CACtBJ,cAACgE,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAG/D,SAC1BJ,cAACyC,IAAK8B,KAAI,CACRC,MAAM,OACN9B,KAAK,OACL+B,MAAO,CACL,CACEC,UAAU,EACV7C,QAAS,uBAEXzB,SAEFJ,cAAC2E,IAAK,QAGV3E,cAACgE,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAG/D,SAC1BJ,cAACyC,IAAK8B,KAAI,CACRC,MAAM,WACN9B,KAAK,WACL+B,MAAO,CACL,CACEC,UAAU,EACV7C,QAAS,2BAEXzB,SAEFJ,cAAC2E,IAAK,QAGV3E,cAACgE,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAG/D,SAC1BJ,cAACyC,IAAK8B,KAAI,CACRC,MAAM,QACN9B,KAAK,QACL+B,MAAO,CACL,CACEC,UAAU,EACVnC,KAAM,QACNV,QAAS,gCAEXzB,SAEFJ,cAAC2E,IAAK,QAGV3E,cAACgE,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAG/D,SAC1BJ,cAACyC,IAAK8B,KAAI,CAACC,MAAM,eAAe9B,KAAK,cAAatC,SAChDJ,cAAC2E,IAAK,QAGV3E,cAACgE,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAG/D,SAC1BJ,cAACyC,IAAK8B,KAAI,CAACC,MAAM,UAAU9B,KAAK,UAAStC,SACvCJ,cAAC2E,IAAK,QAGV3E,cAACgE,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAG/D,SAC1BJ,cAACyC,IAAK8B,KAAI,CAACC,MAAM,OAAO9B,KAAK,OAAMtC,SACjCJ,cAAC2E,IAAK,QAGV3E,cAACgE,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAG/D,SAC1BJ,cAACyC,IAAK8B,KAAI,CAACC,MAAM,YAAY9B,KAAK,WAAUtC,SAC1CJ,cAAC2E,IAAK,WAIZ3E,cAACsC,IAAM,CAACC,KAAK,UAAUqC,SAAS,SAAQxE,SAAC,2BASvD,C","file":"static/js/18.084eb270.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Form, Avatar, Button, Input, Row, Col, message, Upload } from \"antd\";\r\nimport { UserOutlined } from \"@ant-design/icons\";\r\nimport { ROW_GUTTER } from \"constants/ThemeConstant\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport Loading from \"components/shared-components/Loading\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchUser } from \"redux/actions/User\";\r\nimport {\r\n  useHistory,\r\n  useParams,\r\n} from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { APP_PREFIX_PATH } from \"configs/AppConfig\";\r\n\r\nconst EditProfile = () => {\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const [avatar, setAvatar] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const { currentUser, isLoading } = useSelector((store) => store.user);\r\n  useEffect(() => {\r\n    dispatch(fetchUser(id));\r\n  }, [id]);\r\n\r\n  const getBase64 = (img, callback) => {\r\n    const reader = new FileReader();\r\n    reader.addEventListener(\"load\", () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    const key = \"updatable\";\r\n    message.success({ content: \"Done!\", key });\r\n    setTimeout(() => {\r\n      message.destroy();\r\n      history.push(`${APP_PREFIX_PATH}/client-list`);\r\n    }, 1000);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const onUploadAvatar = (info) => {\r\n    const key = \"updatable\";\r\n    if (info.file.status === \"done\") {\r\n      getBase64(info.file.originFileObj, (imageUrl) => setAvatar(imageUrl));\r\n      message.success({ content: \"Uploaded!\", key, duration: 2 });\r\n      setTimeout(() => {\r\n        message.destroy();\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  const onRemoveAvatar = () => {\r\n    setAvatar(\"\");\r\n  };\r\n  const avatarEndpoint = \"https://www.mocky.io/v2/5cc8019d300000980a055e76\";\r\n  if (isLoading) return <Loading />;\r\n  return (\r\n    <>\r\n      <Flex\r\n        alignItems=\"center\"\r\n        mobileFlex={false}\r\n        className=\"text-center text-md-left\"\r\n      >\r\n        <Avatar size={90} src={avatar} icon={<UserOutlined />} />\r\n        <div className=\"ml-md-3 mt-md-0 mt-3\">\r\n          <Upload\r\n            onChange={onUploadAvatar}\r\n            showUploadList={false}\r\n            action={avatarEndpoint}\r\n          >\r\n            <Button type=\"primary\">Change Avatar</Button>\r\n          </Upload>\r\n          <Button className=\"ml-2\" onClick={onRemoveAvatar}>\r\n            Remove\r\n          </Button>\r\n        </div>\r\n      </Flex>\r\n      <div className=\"mt-4\">\r\n        <Form\r\n          name=\"basicInformation\"\r\n          layout=\"vertical\"\r\n          initialValues={{\r\n            avatar: avatar,\r\n            name: currentUser?.name,\r\n            email: currentUser?.email,\r\n            username: currentUser?.username,\r\n            phoneNumber: currentUser?.phone,\r\n            website: currentUser?.website,\r\n            city: currentUser?.address.city,\r\n            postcode: currentUser?.address.zipcode,\r\n          }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n        >\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={16}>\r\n              <Row gutter={ROW_GUTTER}>\r\n                <Col xs={24} sm={24} md={12}>\r\n                  <Form.Item\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Please input name!\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col xs={24} sm={24} md={12}>\r\n                  <Form.Item\r\n                    label=\"Username\"\r\n                    name=\"username\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Please input username!\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col xs={24} sm={24} md={12}>\r\n                  <Form.Item\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        type: \"email\",\r\n                        message: \"Please enter a valid email!\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col xs={24} sm={24} md={12}>\r\n                  <Form.Item label=\"Phone Number\" name=\"phoneNumber\">\r\n                    <Input />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col xs={24} sm={24} md={12}>\r\n                  <Form.Item label=\"Website\" name=\"website\">\r\n                    <Input />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col xs={24} sm={24} md={12}>\r\n                  <Form.Item label=\"City\" name=\"city\">\r\n                    <Input />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col xs={24} sm={24} md={12}>\r\n                  <Form.Item label=\"Post code\" name=\"postcode\">\r\n                    <Input />\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Save Change\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n"],"sourceRoot":""}