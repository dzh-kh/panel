{"version":3,"sources":["components/shared-components/AvatarStatus/index.js","views/app-views/pages/user-list/index.js"],"names":["renderAvatar","props","_jsx","Avatar","_objectSpread","className","concat","type","children","text","AvatarStatus","name","suffix","subTitle","id","src","icon","size","shape","gap","onNameClick","_jsxs","onClick","UserList","_useState","useState","_useState2","_slicedToArray","usersList","setUserList","_useSelector","useSelector","state","user","users","isLoading","history","useHistory","dispatch","useDispatch","useEffect","fetchUsers","console","log","tableColumns","title","dataIndex","render","_","record","push","APP_PREFIX_PATH","img","email","sorter","compare","a","b","toLowerCase","phone","length","address","city","company","website","elm","Tooltip","Button","danger","DeleteOutlined","userId","filter","item","message","success","content","duration","setTimeout","destroy","Loading","Card","bodyStyle","padding","Table","columns","dataSource","rowKey"],"mappings":"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","file":"static/js/19.851a1be2.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar } from 'antd';\r\n\r\nconst renderAvatar = props => {\r\n\treturn <Avatar {...props} className={`ant-avatar-${props.type}`}>{props.text}</Avatar>;\r\n}\r\n\r\nexport const AvatarStatus = props => {\r\n\tconst { name, suffix, subTitle, id, type, src, icon, size, shape, gap, text, onNameClick } = props\r\n\treturn (\r\n\t\t<div className=\"avatar-status d-flex align-items-center\">\r\n\t\t\t{renderAvatar({icon, src, type, size, shape, gap, text })}\r\n\t\t\t<div className=\"ml-2\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonNameClick ? \r\n\t\t\t\t\t\t<div onClick={() => onNameClick({name, subTitle, src, id})} className=\"avatar-status-name clickable\">{name}</div> \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"avatar-status-name\">{name}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{suffix}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAvatarStatus.propTypes = {\r\n\tname: PropTypes.string,\r\n\tsrc: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n\tonNameClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default AvatarStatus;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Card, Table, Tooltip, message, Button } from \"antd\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport AvatarStatus from \"components/shared-components/AvatarStatus\";\r\nimport { fetchUsers } from \"redux/actions/User\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { APP_PREFIX_PATH } from \"configs/AppConfig\";\r\nimport Loading from \"components/shared-components/Loading\";\r\n\r\nconst UserList = () => {\r\n  const [usersList, setUserList] = useState([]);\r\n  const { users, isLoading } = useSelector((state) => state.user);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchUsers());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(users);\r\n    setUserList(users);\r\n  }, [users]);\r\n\r\n  const deleteUser = (userId) => {\r\n    setUserList(usersList.filter((item) => item.id !== userId));\r\n    message.success({ content: `Deleted user ${userId}`, duration: 2 });\r\n    setTimeout(() => message.destroy(), 1000);\r\n  };\r\n\r\n  const tableColumns = [\r\n    {\r\n      title: \"User\",\r\n      dataIndex: \"name\",\r\n      render: (_, record) => (\r\n        <div\r\n          onClick={() =>\r\n            history.push(`${APP_PREFIX_PATH}/setting/${record.id}`)\r\n          }\r\n          className=\"d-flex\"\r\n        >\r\n          <AvatarStatus\r\n            src={record.img}\r\n            name={record.name}\r\n            subTitle={record.email}\r\n          />\r\n        </div>\r\n      ),\r\n      sorter: {\r\n        compare: (a, b) => {\r\n          a = a.name.toLowerCase();\r\n          b = b.name.toLowerCase();\r\n          return a > b ? -1 : b > a ? 1 : 0;\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: \"Phone\",\r\n      dataIndex: \"phone\",\r\n      sorter: {\r\n        compare: (a, b) => a.phone.length - b.phone.length,\r\n      },\r\n    },\r\n    {\r\n      title: \"City\",\r\n      dataIndex: \"city\",\r\n      render: (_, record) => (\r\n        <div className=\"d-flex\">{record.address.city}</div>\r\n      ),\r\n      sorter: {\r\n        compare: (a, b) => {\r\n          a = a.address.city.toLowerCase();\r\n          b = b.address.city.toLowerCase();\r\n          return a > b ? -1 : b > a ? 1 : 0;\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: \"Company\",\r\n      dataIndex: \"company\",\r\n      render: (_, record) => (\r\n        <div className=\"d-flex\">{record.company.name}</div>\r\n      ),\r\n      sorter: {\r\n        compare: (a, b) => {\r\n          a = a.company.name.toLowerCase();\r\n          b = b.company.name.toLowerCase();\r\n          return a > b ? -1 : b > a ? 1 : 0;\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: \"Website\",\r\n      dataIndex: \"website\",\r\n      render: (_, record) => <div className=\"d-flex\">{record.website}</div>,\r\n      sorter: {\r\n        compare: (a, b) => {\r\n          a = a.website.toLowerCase();\r\n          b = b.website.toLowerCase();\r\n          return a > b ? -1 : b > a ? 1 : 0;\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: \"\",\r\n      dataIndex: \"actions\",\r\n      render: (_, elm) => (\r\n        <div className=\"text-right\">\r\n          <Tooltip title=\"Delete\">\r\n            <Button\r\n              danger\r\n              icon={<DeleteOutlined />}\r\n              onClick={() => {\r\n                deleteUser(elm.id);\r\n              }}\r\n              size=\"small\"\r\n            />\r\n          </Tooltip>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  if (isLoading) return <Loading />;\r\n  return (\r\n    <Card bodyStyle={{ padding: \"0px\" }}>\r\n      <Table columns={tableColumns} dataSource={usersList} rowKey=\"id\" />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n"],"sourceRoot":""}